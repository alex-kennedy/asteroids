{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/base64-js/index.js","../node_modules/brotli/dec/decode.js","../node_modules/brotli/dec/streams.js","../node_modules/brotli/dec/dictionary.js","../node_modules/brotli/dec/huffman.js","utils/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/brotli/decompress.js","workers/asteroids.worker.js","../node_modules/buffer/index.js","../node_modules/webpack/buildin/global.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","../node_modules/brotli/dec/bit_reader.js","../node_modules/brotli/dec/dictionary-browser.js","../node_modules/brotli/dec/dictionary.bin.js","../node_modules/brotli/dec/context.js","../node_modules/brotli/dec/prefix.js","../node_modules/brotli/dec/transform.js"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","0","installedWasmModules","wasmImportObjects","26","p0i32","p1i32","exports","__webpack_require__","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","p","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","BrotliInput","require","BrotliOutput","BrotliBitReader","BrotliDictionary","HuffmanCode","BrotliBuildHuffmanTable","Context","Prefix","Transform","kCodeLengthCodeOrder","kDistanceShortCodeIndexOffset","kDistanceShortCodeValueOffset","Int8Array","kMaxHuffmanTableSize","Uint16Array","DecodeWindowBits","br","readBits","DecodeVarLenUint8","nbits","MetaBlockLength","this","meta_block_length","input_end","is_uncompressed","is_metadata","DecodeMetaBlockLength","size_nibbles","size_bytes","out","next_byte","next_nibble","ReadSymbol","table","index","fillBitWindow","val_","bit_pos_","bits","ReadHuffmanCode","alphabet_size","tables","table_size","simple_code_or_skip","code_lengths","readMoreInput","max_bits_counter","max_bits","symbols","Int32Array","num_symbols","code_length_code_lengths","space","num_codes","huff","v","code_len_idx","symbol","prev_code_len","repeat","repeat_code_len","code_len","old_repeat","repeat_delta","extra_bits","new_len","ReadHuffmanCodeLengths","ReadBlockLength","kBlockLengthPrefixCode","offset","TranslateShortCodes","ringbuffer","val","MoveToFront","HuffmanTreeGroup","num_htrees","codes","htrees","Uint32Array","DecodeContextMap","context_map_size","context_map","max_run_length_prefix","reps","v_len","mtf","InverseMoveToFrontTransform","DecodeBlockType","max_block_type","trees","tree_type","block_types","ringbuffers","indexes","block_type","type_code","CopyUncompressedBlockToOutput","pos","ringbuffer_mask","nbytes","rb_size","rb_pos","br_pos","pos_","IBUF_MASK","bit_end_pos_","write","tail","buf_","input_","read","reset","JumpToByteBoundary","new_bit_pos","BrotliDecompressedSize","buffer","input","BrotliDecompress","window_bits","max_backward_distance","ringbuffer_size","ringbuffer_end","block_type_trees","block_len_trees","max_distance","dist_rb","dist_rb_idx","prev_byte1","prev_byte2","hgroup","kRingBufferWriteAheadSlack","READ_SIZE","maxDictionaryWordLength","distance_postfix_bits","num_direct_distance_codes","distance_postfix_mask","num_distance_codes","num_literal_htrees","dist_context_map","num_dist_htrees","context_mode","htree_command","meta_block_remaining_len","block_length","num_block_types","block_type_rb","block_type_rb_index","context_modes","context_map_slice","literal_htree_index","dist_context_map_slice","dist_htree_index","context_lookup_offset1","context_lookup_offset2","_out","set","_o1","_o2","decode","lookupOffsets","cmd_code","range_idx","insert_code","copy_code","insert_length","copy_length","distance_code","distance","j","copy_dst","postfix","kInsertRangeLut","kCopyRangeLut","kInsertLengthPrefixCode","kCopyLengthPrefixCode","minDictionaryWordLength","offsetsByLength","word_id","shift","sizeBitsByLength","transform_idx","kNumTransforms","transformDictionaryWord","_x","next","BrotliDecompressBuffer","output_size","output_buffer","subarray","init","buf","count","data","dictionary","GetNextKey","step","ReplicateValue","NextTableBitSize","root_bits","left","root_table","code_lengths_size","low","mask","table_bits","total_size","sorted","start_table","MAX_LENGTH","fetchBrotliAsJSON","path","a","response","decompressed","decompress","Buffer","JSON","parse","TextDecoder","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","error","done","_asyncToGenerator","fn","args","arguments","apply","err","undefined","getLocationBuffers","locations","type","asteroids","entries","asteroidSets","locationsBuffer","onmessage","message","cmd","async","wasmPromise","wasmModule","payloadPromise","process","results","payload","Date","now","epoch","meta","AsteroidSet","recomputeLocations","createAsteroidSets","postMessage","keys","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","obj","isBuffer","checked","copy","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","Math","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","y","concat","list","swap16","swap32","swap64","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","g","Function","window","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","awrap","iter","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","kBitMask","buf_ptr_","eos_","bytes_read","n_bits","PrefixCodeRange","prefix","transform","suffix","kTransforms","ToUpperCase","idx","word","uppercase","skip","start_idx","prefix_pos","suffix_pos"],"mappings":"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AC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAK,EAE7D,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAE7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAG7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAE7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAE7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAE7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAE5C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC9C,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAE3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAE3D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAC5D,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5D,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAE5D,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","file":"static/js/asteroids.worker.31be8726.worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t26: function() {\n \t\t\treturn {\n \t\t\t\t\"./index_bg.js\": {\n \t\t\t\t\t\"__wbg_log_4c5cd786a2b55b17\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[23].exports[\"c\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_59cb74e423758ede\": function() {\n \t\t\t\t\t\treturn installedModules[23].exports[\"d\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_stack_558ba5917b466edd\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[23].exports[\"e\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_error_4bb6c2a97407129a\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[23].exports[\"b\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_object_drop_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[23].exports[\"f\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[23].exports[\"g\"](p0i32,p1i32);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(__webpack_require__.p + \"static/js/\" + ({}[chunkId]||chunkId) + \".\" + {\"1\":\"57d35084\"}[chunkId] + \".chunk.worker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"1\":[26]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"26\":\"0c45ba350a919bbfb67c\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/solar-system/\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = require(\"regenerator-runtime\");\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nvar BrotliInput = require('./streams').BrotliInput;\nvar BrotliOutput = require('./streams').BrotliOutput;\nvar BrotliBitReader = require('./bit_reader');\nvar BrotliDictionary = require('./dictionary');\nvar HuffmanCode = require('./huffman').HuffmanCode;\nvar BrotliBuildHuffmanTable = require('./huffman').BrotliBuildHuffmanTable;\nvar Context = require('./context');\nvar Prefix = require('./prefix');\nvar Transform = require('./transform');\n\nvar kDefaultCodeLength = 8;\nvar kCodeLengthRepeatCode = 16;\nvar kNumLiteralCodes = 256;\nvar kNumInsertAndCopyCodes = 704;\nvar kNumBlockLengthCodes = 26;\nvar kLiteralContextBits = 6;\nvar kDistanceContextBits = 2;\n\nvar HUFFMAN_TABLE_BITS = 8;\nvar HUFFMAN_TABLE_MASK = 0xff;\n/* Maximum possible Huffman table size for an alphabet size of 704, max code\n * length 15 and root table bits 8. */\nvar HUFFMAN_MAX_TABLE_SIZE = 1080;\n\nvar CODE_LENGTH_CODES = 18;\nvar kCodeLengthCodeOrder = new Uint8Array([\n  1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n]);\n\nvar NUM_DISTANCE_SHORT_CODES = 16;\nvar kDistanceShortCodeIndexOffset = new Uint8Array([\n  3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2\n]);\n\nvar kDistanceShortCodeValueOffset = new Int8Array([\n  0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3\n]);\n\nvar kMaxHuffmanTableSize = new Uint16Array([\n  256, 402, 436, 468, 500, 534, 566, 598, 630, 662, 694, 726, 758, 790, 822,\n  854, 886, 920, 952, 984, 1016, 1048, 1080\n]);\n\nfunction DecodeWindowBits(br) {\n  var n;\n  if (br.readBits(1) === 0) {\n    return 16;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 17 + n;\n  }\n  \n  n = br.readBits(3);\n  if (n > 0) {\n    return 8 + n;\n  }\n  \n  return 17;\n}\n\n/* Decodes a number in the range [0..255], by reading 1 - 11 bits. */\nfunction DecodeVarLenUint8(br) {\n  if (br.readBits(1)) {\n    var nbits = br.readBits(3);\n    if (nbits === 0) {\n      return 1;\n    } else {\n      return br.readBits(nbits) + (1 << nbits);\n    }\n  }\n  return 0;\n}\n\nfunction MetaBlockLength() {\n  this.meta_block_length = 0;\n  this.input_end = 0;\n  this.is_uncompressed = 0;\n  this.is_metadata = false;\n}\n\nfunction DecodeMetaBlockLength(br) {\n  var out = new MetaBlockLength;  \n  var size_nibbles;\n  var size_bytes;\n  var i;\n  \n  out.input_end = br.readBits(1);\n  if (out.input_end && br.readBits(1)) {\n    return out;\n  }\n  \n  size_nibbles = br.readBits(2) + 4;\n  if (size_nibbles === 7) {\n    out.is_metadata = true;\n    \n    if (br.readBits(1) !== 0)\n      throw new Error('Invalid reserved bit');\n    \n    size_bytes = br.readBits(2);\n    if (size_bytes === 0)\n      return out;\n    \n    for (i = 0; i < size_bytes; i++) {\n      var next_byte = br.readBits(8);\n      if (i + 1 === size_bytes && size_bytes > 1 && next_byte === 0)\n        throw new Error('Invalid size byte');\n      \n      out.meta_block_length |= next_byte << (i * 8);\n    }\n  } else {\n    for (i = 0; i < size_nibbles; ++i) {\n      var next_nibble = br.readBits(4);\n      if (i + 1 === size_nibbles && size_nibbles > 4 && next_nibble === 0)\n        throw new Error('Invalid size nibble');\n      \n      out.meta_block_length |= next_nibble << (i * 4);\n    }\n  }\n  \n  ++out.meta_block_length;\n  \n  if (!out.input_end && !out.is_metadata) {\n    out.is_uncompressed = br.readBits(1);\n  }\n  \n  return out;\n}\n\n/* Decodes the next Huffman code from bit-stream. */\nfunction ReadSymbol(table, index, br) {\n  var start_index = index;\n  \n  var nbits;\n  br.fillBitWindow();\n  index += (br.val_ >>> br.bit_pos_) & HUFFMAN_TABLE_MASK;\n  nbits = table[index].bits - HUFFMAN_TABLE_BITS;\n  if (nbits > 0) {\n    br.bit_pos_ += HUFFMAN_TABLE_BITS;\n    index += table[index].value;\n    index += (br.val_ >>> br.bit_pos_) & ((1 << nbits) - 1);\n  }\n  br.bit_pos_ += table[index].bits;\n  return table[index].value;\n}\n\nfunction ReadHuffmanCodeLengths(code_length_code_lengths, num_symbols, code_lengths, br) {\n  var symbol = 0;\n  var prev_code_len = kDefaultCodeLength;\n  var repeat = 0;\n  var repeat_code_len = 0;\n  var space = 32768;\n  \n  var table = [];\n  for (var i = 0; i < 32; i++)\n    table.push(new HuffmanCode(0, 0));\n  \n  BrotliBuildHuffmanTable(table, 0, 5, code_length_code_lengths, CODE_LENGTH_CODES);\n\n  while (symbol < num_symbols && space > 0) {\n    var p = 0;\n    var code_len;\n    \n    br.readMoreInput();\n    br.fillBitWindow();\n    p += (br.val_ >>> br.bit_pos_) & 31;\n    br.bit_pos_ += table[p].bits;\n    code_len = table[p].value & 0xff;\n    if (code_len < kCodeLengthRepeatCode) {\n      repeat = 0;\n      code_lengths[symbol++] = code_len;\n      if (code_len !== 0) {\n        prev_code_len = code_len;\n        space -= 32768 >> code_len;\n      }\n    } else {\n      var extra_bits = code_len - 14;\n      var old_repeat;\n      var repeat_delta;\n      var new_len = 0;\n      if (code_len === kCodeLengthRepeatCode) {\n        new_len = prev_code_len;\n      }\n      if (repeat_code_len !== new_len) {\n        repeat = 0;\n        repeat_code_len = new_len;\n      }\n      old_repeat = repeat;\n      if (repeat > 0) {\n        repeat -= 2;\n        repeat <<= extra_bits;\n      }\n      repeat += br.readBits(extra_bits) + 3;\n      repeat_delta = repeat - old_repeat;\n      if (symbol + repeat_delta > num_symbols) {\n        throw new Error('[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols');\n      }\n      \n      for (var x = 0; x < repeat_delta; x++)\n        code_lengths[symbol + x] = repeat_code_len;\n      \n      symbol += repeat_delta;\n      \n      if (repeat_code_len !== 0) {\n        space -= repeat_delta << (15 - repeat_code_len);\n      }\n    }\n  }\n  if (space !== 0) {\n    throw new Error(\"[ReadHuffmanCodeLengths] space = \" + space);\n  }\n  \n  for (; symbol < num_symbols; symbol++)\n    code_lengths[symbol] = 0;\n}\n\nfunction ReadHuffmanCode(alphabet_size, tables, table, br) {\n  var table_size = 0;\n  var simple_code_or_skip;\n  var code_lengths = new Uint8Array(alphabet_size);\n  \n  br.readMoreInput();\n  \n  /* simple_code_or_skip is used as follows:\n     1 for simple code;\n     0 for no skipping, 2 skips 2 code lengths, 3 skips 3 code lengths */\n  simple_code_or_skip = br.readBits(2);\n  if (simple_code_or_skip === 1) {\n    /* Read symbols, codes & code lengths directly. */\n    var i;\n    var max_bits_counter = alphabet_size - 1;\n    var max_bits = 0;\n    var symbols = new Int32Array(4);\n    var num_symbols = br.readBits(2) + 1;\n    while (max_bits_counter) {\n      max_bits_counter >>= 1;\n      ++max_bits;\n    }\n\n    for (i = 0; i < num_symbols; ++i) {\n      symbols[i] = br.readBits(max_bits) % alphabet_size;\n      code_lengths[symbols[i]] = 2;\n    }\n    code_lengths[symbols[0]] = 1;\n    switch (num_symbols) {\n      case 1:\n        break;\n      case 3:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[1] === symbols[2])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        break;\n      case 2:\n        if (symbols[0] === symbols[1]) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        code_lengths[symbols[1]] = 1;\n        break;\n      case 4:\n        if ((symbols[0] === symbols[1]) ||\n            (symbols[0] === symbols[2]) ||\n            (symbols[0] === symbols[3]) ||\n            (symbols[1] === symbols[2]) ||\n            (symbols[1] === symbols[3]) ||\n            (symbols[2] === symbols[3])) {\n          throw new Error('[ReadHuffmanCode] invalid symbols');\n        }\n        \n        if (br.readBits(1)) {\n          code_lengths[symbols[2]] = 3;\n          code_lengths[symbols[3]] = 3;\n        } else {\n          code_lengths[symbols[0]] = 2;\n        }\n        break;\n    }\n  } else {  /* Decode Huffman-coded code lengths. */\n    var i;\n    var code_length_code_lengths = new Uint8Array(CODE_LENGTH_CODES);\n    var space = 32;\n    var num_codes = 0;\n    /* Static Huffman code for the code length code lengths */\n    var huff = [\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 1),\n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(3, 2), \n      new HuffmanCode(2, 0), new HuffmanCode(2, 4), new HuffmanCode(2, 3), new HuffmanCode(4, 5)\n    ];\n    for (i = simple_code_or_skip; i < CODE_LENGTH_CODES && space > 0; ++i) {\n      var code_len_idx = kCodeLengthCodeOrder[i];\n      var p = 0;\n      var v;\n      br.fillBitWindow();\n      p += (br.val_ >>> br.bit_pos_) & 15;\n      br.bit_pos_ += huff[p].bits;\n      v = huff[p].value;\n      code_length_code_lengths[code_len_idx] = v;\n      if (v !== 0) {\n        space -= (32 >> v);\n        ++num_codes;\n      }\n    }\n    \n    if (!(num_codes === 1 || space === 0))\n      throw new Error('[ReadHuffmanCode] invalid num_codes or space');\n    \n    ReadHuffmanCodeLengths(code_length_code_lengths, alphabet_size, code_lengths, br);\n  }\n  \n  table_size = BrotliBuildHuffmanTable(tables, table, HUFFMAN_TABLE_BITS, code_lengths, alphabet_size);\n  \n  if (table_size === 0) {\n    throw new Error(\"[ReadHuffmanCode] BuildHuffmanTable failed: \");\n  }\n  \n  return table_size;\n}\n\nfunction ReadBlockLength(table, index, br) {\n  var code;\n  var nbits;\n  code = ReadSymbol(table, index, br);\n  nbits = Prefix.kBlockLengthPrefixCode[code].nbits;\n  return Prefix.kBlockLengthPrefixCode[code].offset + br.readBits(nbits);\n}\n\nfunction TranslateShortCodes(code, ringbuffer, index) {\n  var val;\n  if (code < NUM_DISTANCE_SHORT_CODES) {\n    index += kDistanceShortCodeIndexOffset[code];\n    index &= 3;\n    val = ringbuffer[index] + kDistanceShortCodeValueOffset[code];\n  } else {\n    val = code - NUM_DISTANCE_SHORT_CODES + 1;\n  }\n  return val;\n}\n\nfunction MoveToFront(v, index) {\n  var value = v[index];\n  var i = index;\n  for (; i; --i) v[i] = v[i - 1];\n  v[0] = value;\n}\n\nfunction InverseMoveToFrontTransform(v, v_len) {\n  var mtf = new Uint8Array(256);\n  var i;\n  for (i = 0; i < 256; ++i) {\n    mtf[i] = i;\n  }\n  for (i = 0; i < v_len; ++i) {\n    var index = v[i];\n    v[i] = mtf[index];\n    if (index) MoveToFront(mtf, index);\n  }\n}\n\n/* Contains a collection of huffman trees with the same alphabet size. */\nfunction HuffmanTreeGroup(alphabet_size, num_htrees) {\n  this.alphabet_size = alphabet_size;\n  this.num_htrees = num_htrees;\n  this.codes = new Array(num_htrees + num_htrees * kMaxHuffmanTableSize[(alphabet_size + 31) >>> 5]);  \n  this.htrees = new Uint32Array(num_htrees);\n}\n\nHuffmanTreeGroup.prototype.decode = function(br) {\n  var i;\n  var table_size;\n  var next = 0;\n  for (i = 0; i < this.num_htrees; ++i) {\n    this.htrees[i] = next;\n    table_size = ReadHuffmanCode(this.alphabet_size, this.codes, next, br);\n    next += table_size;\n  }\n};\n\nfunction DecodeContextMap(context_map_size, br) {\n  var out = { num_htrees: null, context_map: null };\n  var use_rle_for_zeros;\n  var max_run_length_prefix = 0;\n  var table;\n  var i;\n  \n  br.readMoreInput();\n  var num_htrees = out.num_htrees = DecodeVarLenUint8(br) + 1;\n\n  var context_map = out.context_map = new Uint8Array(context_map_size);\n  if (num_htrees <= 1) {\n    return out;\n  }\n\n  use_rle_for_zeros = br.readBits(1);\n  if (use_rle_for_zeros) {\n    max_run_length_prefix = br.readBits(4) + 1;\n  }\n  \n  table = [];\n  for (i = 0; i < HUFFMAN_MAX_TABLE_SIZE; i++) {\n    table[i] = new HuffmanCode(0, 0);\n  }\n  \n  ReadHuffmanCode(num_htrees + max_run_length_prefix, table, 0, br);\n  \n  for (i = 0; i < context_map_size;) {\n    var code;\n\n    br.readMoreInput();\n    code = ReadSymbol(table, 0, br);\n    if (code === 0) {\n      context_map[i] = 0;\n      ++i;\n    } else if (code <= max_run_length_prefix) {\n      var reps = 1 + (1 << code) + br.readBits(code);\n      while (--reps) {\n        if (i >= context_map_size) {\n          throw new Error(\"[DecodeContextMap] i >= context_map_size\");\n        }\n        context_map[i] = 0;\n        ++i;\n      }\n    } else {\n      context_map[i] = code - max_run_length_prefix;\n      ++i;\n    }\n  }\n  if (br.readBits(1)) {\n    InverseMoveToFrontTransform(context_map, context_map_size);\n  }\n  \n  return out;\n}\n\nfunction DecodeBlockType(max_block_type, trees, tree_type, block_types, ringbuffers, indexes, br) {\n  var ringbuffer = tree_type * 2;\n  var index = tree_type;\n  var type_code = ReadSymbol(trees, tree_type * HUFFMAN_MAX_TABLE_SIZE, br);\n  var block_type;\n  if (type_code === 0) {\n    block_type = ringbuffers[ringbuffer + (indexes[index] & 1)];\n  } else if (type_code === 1) {\n    block_type = ringbuffers[ringbuffer + ((indexes[index] - 1) & 1)] + 1;\n  } else {\n    block_type = type_code - 2;\n  }\n  if (block_type >= max_block_type) {\n    block_type -= max_block_type;\n  }\n  block_types[tree_type] = block_type;\n  ringbuffers[ringbuffer + (indexes[index] & 1)] = block_type;\n  ++indexes[index];\n}\n\nfunction CopyUncompressedBlockToOutput(output, len, pos, ringbuffer, ringbuffer_mask, br) {\n  var rb_size = ringbuffer_mask + 1;\n  var rb_pos = pos & ringbuffer_mask;\n  var br_pos = br.pos_ & BrotliBitReader.IBUF_MASK;\n  var nbytes;\n\n  /* For short lengths copy byte-by-byte */\n  if (len < 8 || br.bit_pos_ + (len << 3) < br.bit_end_pos_) {\n    while (len-- > 0) {\n      br.readMoreInput();\n      ringbuffer[rb_pos++] = br.readBits(8);\n      if (rb_pos === rb_size) {\n        output.write(ringbuffer, rb_size);\n        rb_pos = 0;\n      }\n    }\n    return;\n  }\n\n  if (br.bit_end_pos_ < 32) {\n    throw new Error('[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32');\n  }\n\n  /* Copy remaining 0-4 bytes from br.val_ to ringbuffer. */\n  while (br.bit_pos_ < 32) {\n    ringbuffer[rb_pos] = (br.val_ >>> br.bit_pos_);\n    br.bit_pos_ += 8;\n    ++rb_pos;\n    --len;\n  }\n\n  /* Copy remaining bytes from br.buf_ to ringbuffer. */\n  nbytes = (br.bit_end_pos_ - br.bit_pos_) >> 3;\n  if (br_pos + nbytes > BrotliBitReader.IBUF_MASK) {\n    var tail = BrotliBitReader.IBUF_MASK + 1 - br_pos;\n    for (var x = 0; x < tail; x++)\n      ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n    \n    nbytes -= tail;\n    rb_pos += tail;\n    len -= tail;\n    br_pos = 0;\n  }\n\n  for (var x = 0; x < nbytes; x++)\n    ringbuffer[rb_pos + x] = br.buf_[br_pos + x];\n  \n  rb_pos += nbytes;\n  len -= nbytes;\n\n  /* If we wrote past the logical end of the ringbuffer, copy the tail of the\n     ringbuffer to its beginning and flush the ringbuffer to the output. */\n  if (rb_pos >= rb_size) {\n    output.write(ringbuffer, rb_size);\n    rb_pos -= rb_size;    \n    for (var x = 0; x < rb_pos; x++)\n      ringbuffer[x] = ringbuffer[rb_size + x];\n  }\n\n  /* If we have more to copy than the remaining size of the ringbuffer, then we\n     first fill the ringbuffer from the input and then flush the ringbuffer to\n     the output */\n  while (rb_pos + len >= rb_size) {\n    nbytes = rb_size - rb_pos;\n    if (br.input_.read(ringbuffer, rb_pos, nbytes) < nbytes) {\n      throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n    }\n    output.write(ringbuffer, rb_size);\n    len -= nbytes;\n    rb_pos = 0;\n  }\n\n  /* Copy straight from the input onto the ringbuffer. The ringbuffer will be\n     flushed to the output at a later time. */\n  if (br.input_.read(ringbuffer, rb_pos, len) < len) {\n    throw new Error('[CopyUncompressedBlockToOutput] not enough bytes');\n  }\n\n  /* Restore the state of the bit reader. */\n  br.reset();\n}\n\n/* Advances the bit reader position to the next byte boundary and verifies\n   that any skipped bits are set to zero. */\nfunction JumpToByteBoundary(br) {\n  var new_bit_pos = (br.bit_pos_ + 7) & ~7;\n  var pad_bits = br.readBits(new_bit_pos - br.bit_pos_);\n  return pad_bits == 0;\n}\n\nfunction BrotliDecompressedSize(buffer) {\n  var input = new BrotliInput(buffer);\n  var br = new BrotliBitReader(input);\n  DecodeWindowBits(br);\n  var out = DecodeMetaBlockLength(br);\n  return out.meta_block_length;\n}\n\nexports.BrotliDecompressedSize = BrotliDecompressedSize;\n\nfunction BrotliDecompressBuffer(buffer, output_size) {\n  var input = new BrotliInput(buffer);\n  \n  if (output_size == null) {\n    output_size = BrotliDecompressedSize(buffer);\n  }\n  \n  var output_buffer = new Uint8Array(output_size);\n  var output = new BrotliOutput(output_buffer);\n  \n  BrotliDecompress(input, output);\n  \n  if (output.pos < output.buffer.length) {\n    output.buffer = output.buffer.subarray(0, output.pos);\n  }\n  \n  return output.buffer;\n}\n\nexports.BrotliDecompressBuffer = BrotliDecompressBuffer;\n\nfunction BrotliDecompress(input, output) {\n  var i;\n  var pos = 0;\n  var input_end = 0;\n  var window_bits = 0;\n  var max_backward_distance;\n  var max_distance = 0;\n  var ringbuffer_size;\n  var ringbuffer_mask;\n  var ringbuffer;\n  var ringbuffer_end;\n  /* This ring buffer holds a few past copy distances that will be used by */\n  /* some special distance codes. */\n  var dist_rb = [ 16, 15, 11, 4 ];\n  var dist_rb_idx = 0;\n  /* The previous 2 bytes used for context. */\n  var prev_byte1 = 0;\n  var prev_byte2 = 0;\n  var hgroup = [new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0), new HuffmanTreeGroup(0, 0)];\n  var block_type_trees;\n  var block_len_trees;\n  var br;\n\n  /* We need the slack region for the following reasons:\n       - always doing two 8-byte copies for fast backward copying\n       - transforms\n       - flushing the input ringbuffer when decoding uncompressed blocks */\n  var kRingBufferWriteAheadSlack = 128 + BrotliBitReader.READ_SIZE;\n\n  br = new BrotliBitReader(input);\n\n  /* Decode window size. */\n  window_bits = DecodeWindowBits(br);\n  max_backward_distance = (1 << window_bits) - 16;\n\n  ringbuffer_size = 1 << window_bits;\n  ringbuffer_mask = ringbuffer_size - 1;\n  ringbuffer = new Uint8Array(ringbuffer_size + kRingBufferWriteAheadSlack + BrotliDictionary.maxDictionaryWordLength);\n  ringbuffer_end = ringbuffer_size;\n\n  block_type_trees = [];\n  block_len_trees = [];\n  for (var x = 0; x < 3 * HUFFMAN_MAX_TABLE_SIZE; x++) {\n    block_type_trees[x] = new HuffmanCode(0, 0);\n    block_len_trees[x] = new HuffmanCode(0, 0);\n  }\n\n  while (!input_end) {\n    var meta_block_remaining_len = 0;\n    var is_uncompressed;\n    var block_length = [ 1 << 28, 1 << 28, 1 << 28 ];\n    var block_type = [ 0 ];\n    var num_block_types = [ 1, 1, 1 ];\n    var block_type_rb = [ 0, 1, 0, 1, 0, 1 ];\n    var block_type_rb_index = [ 0 ];\n    var distance_postfix_bits;\n    var num_direct_distance_codes;\n    var distance_postfix_mask;\n    var num_distance_codes;\n    var context_map = null;\n    var context_modes = null;\n    var num_literal_htrees;\n    var dist_context_map = null;\n    var num_dist_htrees;\n    var context_offset = 0;\n    var context_map_slice = null;\n    var literal_htree_index = 0;\n    var dist_context_offset = 0;\n    var dist_context_map_slice = null;\n    var dist_htree_index = 0;\n    var context_lookup_offset1 = 0;\n    var context_lookup_offset2 = 0;\n    var context_mode;\n    var htree_command;\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].codes = null;\n      hgroup[i].htrees = null;\n    }\n\n    br.readMoreInput();\n    \n    var _out = DecodeMetaBlockLength(br);\n    meta_block_remaining_len = _out.meta_block_length;\n    if (pos + meta_block_remaining_len > output.buffer.length) {\n      /* We need to grow the output buffer to fit the additional data. */\n      var tmp = new Uint8Array( pos + meta_block_remaining_len );\n      tmp.set( output.buffer );\n      output.buffer = tmp;\n    }    \n    input_end = _out.input_end;\n    is_uncompressed = _out.is_uncompressed;\n    \n    if (_out.is_metadata) {\n      JumpToByteBoundary(br);\n      \n      for (; meta_block_remaining_len > 0; --meta_block_remaining_len) {\n        br.readMoreInput();\n        /* Read one byte and ignore it. */\n        br.readBits(8);\n      }\n      \n      continue;\n    }\n    \n    if (meta_block_remaining_len === 0) {\n      continue;\n    }\n    \n    if (is_uncompressed) {\n      br.bit_pos_ = (br.bit_pos_ + 7) & ~7;\n      CopyUncompressedBlockToOutput(output, meta_block_remaining_len, pos,\n                                    ringbuffer, ringbuffer_mask, br);\n      pos += meta_block_remaining_len;\n      continue;\n    }\n    \n    for (i = 0; i < 3; ++i) {\n      num_block_types[i] = DecodeVarLenUint8(br) + 1;\n      if (num_block_types[i] >= 2) {\n        ReadHuffmanCode(num_block_types[i] + 2, block_type_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        ReadHuffmanCode(kNumBlockLengthCodes, block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_length[i] = ReadBlockLength(block_len_trees, i * HUFFMAN_MAX_TABLE_SIZE, br);\n        block_type_rb_index[i] = 1;\n      }\n    }\n    \n    br.readMoreInput();\n    \n    distance_postfix_bits = br.readBits(2);\n    num_direct_distance_codes = NUM_DISTANCE_SHORT_CODES + (br.readBits(4) << distance_postfix_bits);\n    distance_postfix_mask = (1 << distance_postfix_bits) - 1;\n    num_distance_codes = (num_direct_distance_codes + (48 << distance_postfix_bits));\n    context_modes = new Uint8Array(num_block_types[0]);\n\n    for (i = 0; i < num_block_types[0]; ++i) {\n       br.readMoreInput();\n       context_modes[i] = (br.readBits(2) << 1);\n    }\n    \n    var _o1 = DecodeContextMap(num_block_types[0] << kLiteralContextBits, br);\n    num_literal_htrees = _o1.num_htrees;\n    context_map = _o1.context_map;\n    \n    var _o2 = DecodeContextMap(num_block_types[2] << kDistanceContextBits, br);\n    num_dist_htrees = _o2.num_htrees;\n    dist_context_map = _o2.context_map;\n    \n    hgroup[0] = new HuffmanTreeGroup(kNumLiteralCodes, num_literal_htrees);\n    hgroup[1] = new HuffmanTreeGroup(kNumInsertAndCopyCodes, num_block_types[1]);\n    hgroup[2] = new HuffmanTreeGroup(num_distance_codes, num_dist_htrees);\n\n    for (i = 0; i < 3; ++i) {\n      hgroup[i].decode(br);\n    }\n\n    context_map_slice = 0;\n    dist_context_map_slice = 0;\n    context_mode = context_modes[block_type[0]];\n    context_lookup_offset1 = Context.lookupOffsets[context_mode];\n    context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n    htree_command = hgroup[1].htrees[0];\n\n    while (meta_block_remaining_len > 0) {\n      var cmd_code;\n      var range_idx;\n      var insert_code;\n      var copy_code;\n      var insert_length;\n      var copy_length;\n      var distance_code;\n      var distance;\n      var context;\n      var j;\n      var copy_dst;\n\n      br.readMoreInput();\n      \n      if (block_length[1] === 0) {\n        DecodeBlockType(num_block_types[1],\n                        block_type_trees, 1, block_type, block_type_rb,\n                        block_type_rb_index, br);\n        block_length[1] = ReadBlockLength(block_len_trees, HUFFMAN_MAX_TABLE_SIZE, br);\n        htree_command = hgroup[1].htrees[block_type[1]];\n      }\n      --block_length[1];\n      cmd_code = ReadSymbol(hgroup[1].codes, htree_command, br);\n      range_idx = cmd_code >> 6;\n      if (range_idx >= 2) {\n        range_idx -= 2;\n        distance_code = -1;\n      } else {\n        distance_code = 0;\n      }\n      insert_code = Prefix.kInsertRangeLut[range_idx] + ((cmd_code >> 3) & 7);\n      copy_code = Prefix.kCopyRangeLut[range_idx] + (cmd_code & 7);\n      insert_length = Prefix.kInsertLengthPrefixCode[insert_code].offset +\n          br.readBits(Prefix.kInsertLengthPrefixCode[insert_code].nbits);\n      copy_length = Prefix.kCopyLengthPrefixCode[copy_code].offset +\n          br.readBits(Prefix.kCopyLengthPrefixCode[copy_code].nbits);\n      prev_byte1 = ringbuffer[pos-1 & ringbuffer_mask];\n      prev_byte2 = ringbuffer[pos-2 & ringbuffer_mask];\n      for (j = 0; j < insert_length; ++j) {\n        br.readMoreInput();\n\n        if (block_length[0] === 0) {\n          DecodeBlockType(num_block_types[0],\n                          block_type_trees, 0, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[0] = ReadBlockLength(block_len_trees, 0, br);\n          context_offset = block_type[0] << kLiteralContextBits;\n          context_map_slice = context_offset;\n          context_mode = context_modes[block_type[0]];\n          context_lookup_offset1 = Context.lookupOffsets[context_mode];\n          context_lookup_offset2 = Context.lookupOffsets[context_mode + 1];\n        }\n        context = (Context.lookup[context_lookup_offset1 + prev_byte1] |\n                   Context.lookup[context_lookup_offset2 + prev_byte2]);\n        literal_htree_index = context_map[context_map_slice + context];\n        --block_length[0];\n        prev_byte2 = prev_byte1;\n        prev_byte1 = ReadSymbol(hgroup[0].codes, hgroup[0].htrees[literal_htree_index], br);\n        ringbuffer[pos & ringbuffer_mask] = prev_byte1;\n        if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n          output.write(ringbuffer, ringbuffer_size);\n        }\n        ++pos;\n      }\n      meta_block_remaining_len -= insert_length;\n      if (meta_block_remaining_len <= 0) break;\n\n      if (distance_code < 0) {\n        var context;\n        \n        br.readMoreInput();\n        if (block_length[2] === 0) {\n          DecodeBlockType(num_block_types[2],\n                          block_type_trees, 2, block_type, block_type_rb,\n                          block_type_rb_index, br);\n          block_length[2] = ReadBlockLength(block_len_trees, 2 * HUFFMAN_MAX_TABLE_SIZE, br);\n          dist_context_offset = block_type[2] << kDistanceContextBits;\n          dist_context_map_slice = dist_context_offset;\n        }\n        --block_length[2];\n        context = (copy_length > 4 ? 3 : copy_length - 2) & 0xff;\n        dist_htree_index = dist_context_map[dist_context_map_slice + context];\n        distance_code = ReadSymbol(hgroup[2].codes, hgroup[2].htrees[dist_htree_index], br);\n        if (distance_code >= num_direct_distance_codes) {\n          var nbits;\n          var postfix;\n          var offset;\n          distance_code -= num_direct_distance_codes;\n          postfix = distance_code & distance_postfix_mask;\n          distance_code >>= distance_postfix_bits;\n          nbits = (distance_code >> 1) + 1;\n          offset = ((2 + (distance_code & 1)) << nbits) - 4;\n          distance_code = num_direct_distance_codes +\n              ((offset + br.readBits(nbits)) <<\n               distance_postfix_bits) + postfix;\n        }\n      }\n\n      /* Convert the distance code to the actual distance by possibly looking */\n      /* up past distnaces from the ringbuffer. */\n      distance = TranslateShortCodes(distance_code, dist_rb, dist_rb_idx);\n      if (distance < 0) {\n        throw new Error('[BrotliDecompress] invalid distance');\n      }\n\n      if (pos < max_backward_distance &&\n          max_distance !== max_backward_distance) {\n        max_distance = pos;\n      } else {\n        max_distance = max_backward_distance;\n      }\n\n      copy_dst = pos & ringbuffer_mask;\n\n      if (distance > max_distance) {\n        if (copy_length >= BrotliDictionary.minDictionaryWordLength &&\n            copy_length <= BrotliDictionary.maxDictionaryWordLength) {\n          var offset = BrotliDictionary.offsetsByLength[copy_length];\n          var word_id = distance - max_distance - 1;\n          var shift = BrotliDictionary.sizeBitsByLength[copy_length];\n          var mask = (1 << shift) - 1;\n          var word_idx = word_id & mask;\n          var transform_idx = word_id >> shift;\n          offset += word_idx * copy_length;\n          if (transform_idx < Transform.kNumTransforms) {\n            var len = Transform.transformDictionaryWord(ringbuffer, copy_dst, offset, copy_length, transform_idx);\n            copy_dst += len;\n            pos += len;\n            meta_block_remaining_len -= len;\n            if (copy_dst >= ringbuffer_end) {\n              output.write(ringbuffer, ringbuffer_size);\n              \n              for (var _x = 0; _x < (copy_dst - ringbuffer_end); _x++)\n                ringbuffer[_x] = ringbuffer[ringbuffer_end + _x];\n            }\n          } else {\n            throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n              \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n          }\n        } else {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n      } else {\n        if (distance_code > 0) {\n          dist_rb[dist_rb_idx & 3] = distance;\n          ++dist_rb_idx;\n        }\n\n        if (copy_length > meta_block_remaining_len) {\n          throw new Error(\"Invalid backward reference. pos: \" + pos + \" distance: \" + distance +\n            \" len: \" + copy_length + \" bytes left: \" + meta_block_remaining_len);\n        }\n\n        for (j = 0; j < copy_length; ++j) {\n          ringbuffer[pos & ringbuffer_mask] = ringbuffer[(pos - distance) & ringbuffer_mask];\n          if ((pos & ringbuffer_mask) === ringbuffer_mask) {\n            output.write(ringbuffer, ringbuffer_size);\n          }\n          ++pos;\n          --meta_block_remaining_len;\n        }\n      }\n\n      /* When we get here, we must have inserted at least one literal and */\n      /* made a copy of at least length two, therefore accessing the last 2 */\n      /* bytes is valid. */\n      prev_byte1 = ringbuffer[(pos - 1) & ringbuffer_mask];\n      prev_byte2 = ringbuffer[(pos - 2) & ringbuffer_mask];\n    }\n\n    /* Protect pos from overflow, wrap it around at every GB of input data */\n    pos &= 0x3fffffff;\n  }\n\n  output.write(ringbuffer, pos & ringbuffer_mask);\n}\n\nexports.BrotliDecompress = BrotliDecompress;\n\nBrotliDictionary.init();\n","function BrotliInput(buffer) {\n  this.buffer = buffer;\n  this.pos = 0;\n}\n\nBrotliInput.prototype.read = function(buf, i, count) {\n  if (this.pos + count > this.buffer.length) {\n    count = this.buffer.length - this.pos;\n  }\n  \n  for (var p = 0; p < count; p++)\n    buf[i + p] = this.buffer[this.pos + p];\n  \n  this.pos += count;\n  return count;\n}\n\nexports.BrotliInput = BrotliInput;\n\nfunction BrotliOutput(buf) {\n  this.buffer = buf;\n  this.pos = 0;\n}\n\nBrotliOutput.prototype.write = function(buf, count) {\n  if (this.pos + count > this.buffer.length)\n    throw new Error('Output buffer is not large enough');\n  \n  this.buffer.set(buf.subarray(0, count), this.pos);\n  this.pos += count;\n  return count;\n};\n\nexports.BrotliOutput = BrotliOutput;\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Collection of static dictionary words.\n*/\n\nvar data = require('./dictionary-data');\nexports.init = function() {\n  exports.dictionary = data.init();\n};\n\nexports.offsetsByLength = new Uint32Array([\n     0,     0,     0,     0,     0,  4096,  9216, 21504, 35840, 44032,\n 53248, 63488, 74752, 87040, 93696, 100864, 104704, 106752, 108928, 113536,\n 115968, 118528, 119872, 121280, 122016,\n]);\n\nexports.sizeBitsByLength = new Uint8Array([\n  0,  0,  0,  0, 10, 10, 11, 11, 10, 10,\n 10, 10, 10,  9,  9,  8,  7,  7,  8,  7,\n  7,  6,  6,  5,  5,\n]);\n\nexports.minDictionaryWordLength = 4;\nexports.maxDictionaryWordLength = 24;\n","function HuffmanCode(bits, value) {\n  this.bits = bits;   /* number of bits used for this symbol */\n  this.value = value; /* symbol value or table offset */\n}\n\nexports.HuffmanCode = HuffmanCode;\n\nvar MAX_LENGTH = 15;\n\n/* Returns reverse(reverse(key, len) + 1, len), where reverse(key, len) is the\n   bit-wise reversal of the len least significant bits of key. */\nfunction GetNextKey(key, len) {\n  var step = 1 << (len - 1);\n  while (key & step) {\n    step >>= 1;\n  }\n  return (key & (step - 1)) + step;\n}\n\n/* Stores code in table[0], table[step], table[2*step], ..., table[end] */\n/* Assumes that end is an integer multiple of step */\nfunction ReplicateValue(table, i, step, end, code) {\n  do {\n    end -= step;\n    table[i + end] = new HuffmanCode(code.bits, code.value);\n  } while (end > 0);\n}\n\n/* Returns the table width of the next 2nd level table. count is the histogram\n   of bit lengths for the remaining symbols, len is the code length of the next\n   processed symbol */\nfunction NextTableBitSize(count, len, root_bits) {\n  var left = 1 << (len - root_bits);\n  while (len < MAX_LENGTH) {\n    left -= count[len];\n    if (left <= 0) break;\n    ++len;\n    left <<= 1;\n  }\n  return len - root_bits;\n}\n\nexports.BrotliBuildHuffmanTable = function(root_table, table, root_bits, code_lengths, code_lengths_size) {\n  var start_table = table;\n  var code;            /* current table entry */\n  var len;             /* current code length */\n  var symbol;          /* symbol index in original or sorted table */\n  var key;             /* reversed prefix code */\n  var step;            /* step size to replicate values in current table */\n  var low;             /* low bits for current root entry */\n  var mask;            /* mask for low bits */\n  var table_bits;      /* key length of current table */\n  var table_size;      /* size of current table */\n  var total_size;      /* sum of root table size and 2nd level table sizes */\n  var sorted;          /* symbols sorted by code length */\n  var count = new Int32Array(MAX_LENGTH + 1);  /* number of codes of each length */\n  var offset = new Int32Array(MAX_LENGTH + 1);  /* offsets in sorted table for each length */\n\n  sorted = new Int32Array(code_lengths_size);\n\n  /* build histogram of code lengths */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    count[code_lengths[symbol]]++;\n  }\n\n  /* generate offsets into sorted symbol table by code length */\n  offset[1] = 0;\n  for (len = 1; len < MAX_LENGTH; len++) {\n    offset[len + 1] = offset[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (symbol = 0; symbol < code_lengths_size; symbol++) {\n    if (code_lengths[symbol] !== 0) {\n      sorted[offset[code_lengths[symbol]]++] = symbol;\n    }\n  }\n  \n  table_bits = root_bits;\n  table_size = 1 << table_bits;\n  total_size = table_size;\n\n  /* special case code with only one value */\n  if (offset[MAX_LENGTH] === 1) {\n    for (key = 0; key < total_size; ++key) {\n      root_table[table + key] = new HuffmanCode(0, sorted[0] & 0xffff);\n    }\n    \n    return total_size;\n  }\n\n  /* fill in root table */\n  key = 0;\n  symbol = 0;\n  for (len = 1, step = 2; len <= root_bits; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      code = new HuffmanCode(len & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + key, step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n\n  /* fill in 2nd level tables and add pointers to root table */\n  mask = total_size - 1;\n  low = -1;\n  for (len = root_bits + 1, step = 2; len <= MAX_LENGTH; ++len, step <<= 1) {\n    for (; count[len] > 0; --count[len]) {\n      if ((key & mask) !== low) {\n        table += table_size;\n        table_bits = NextTableBitSize(count, len, root_bits);\n        table_size = 1 << table_bits;\n        total_size += table_size;\n        low = key & mask;\n        root_table[start_table + low] = new HuffmanCode((table_bits + root_bits) & 0xff, ((table - start_table) - low) & 0xffff);\n      }\n      code = new HuffmanCode((len - root_bits) & 0xff, sorted[symbol++] & 0xffff);\n      ReplicateValue(root_table, table + (key >> root_bits), step, table_size, code);\n      key = GetNextKey(key, len);\n    }\n  }\n  \n  return total_size;\n}\n","import decompress from \"brotli/decompress\";\n\nexport async function fetchBrotliAsJSON(path) {\n  const response = await fetch(path);\n  const buffer = await response.arrayBuffer();\n  const decompressed = decompress(Buffer(buffer));\n  return JSON.parse(new TextDecoder(\"utf-8\").decode(decompressed));\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require('./dec/decode').BrotliDecompressBuffer;\n","import { fetchBrotliAsJSON } from \"../utils\";\n\n/* eslint-disable no-restricted-globals */\n\nself.onmessage = (message) => {\n  if (message.data.cmd === \"init\") {\n    init();\n  } else {\n    recomputeLocations(message.data.t);\n  }\n}; \n\nasync function init() {\n  const wasmPromise = import(\"./../components/AsteroidSet\").then(\n    (wasmModule) => {\n      self.wasmModule = wasmModule;\n    }\n  );\n  const payloadPromise = fetchBrotliAsJSON(\n    process.env.PUBLIC_URL + \"/assets/asteroids.json.br\"\n  );\n  const results = await Promise.all([wasmPromise, payloadPromise]);\n  self.asteroidSets = createAsteroidSets(results[1]);\n  self.postMessage({ cmd: \"initComplete\", locations: getLocationBuffers() });\n}\n\nfunction recomputeLocations(t) {\n  for (const type of Object.keys(self.asteroidSets)) {\n    self.asteroidSets[type].recomputeLocations(t);\n  }\n  self.postMessage({ cmd: \"updateComplete\", locations: getLocationBuffers() });\n}\n\nfunction createAsteroidSets(payload) {\n  const t = Date.now() / 1000;\n  const epoch = payload.meta.epoch;\n  const asteroidSets = {};\n  for (const [type, asteroids] of Object.entries(payload[\"asteroids\"])) {\n    asteroidSets[type] = new self.wasmModule.AsteroidSet(asteroids, epoch);\n    asteroidSets[type].recomputeLocations(t);\n  }\n  return asteroidSets;\n}\n\nfunction getLocationBuffers() {\n  const locations = {};\n  for (const [type, asteroids] of Object.entries(self.asteroidSets)) {\n    locations[type] = asteroids.locationsBuffer();\n  }\n  return locations;\n}\n\n/* eslint-enable no-restricted-globals */","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Bit reading helpers\n*/\n\nvar BROTLI_READ_SIZE = 4096;\nvar BROTLI_IBUF_SIZE =  (2 * BROTLI_READ_SIZE + 32);\nvar BROTLI_IBUF_MASK =  (2 * BROTLI_READ_SIZE - 1);\n\nvar kBitMask = new Uint32Array([\n  0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767,\n  65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215\n]);\n\n/* Input byte buffer, consist of a ringbuffer and a \"slack\" region where */\n/* bytes from the start of the ringbuffer are copied. */\nfunction BrotliBitReader(input) {\n  this.buf_ = new Uint8Array(BROTLI_IBUF_SIZE);\n  this.input_ = input;    /* input callback */\n  \n  this.reset();\n}\n\nBrotliBitReader.READ_SIZE = BROTLI_READ_SIZE;\nBrotliBitReader.IBUF_MASK = BROTLI_IBUF_MASK;\n\nBrotliBitReader.prototype.reset = function() {\n  this.buf_ptr_ = 0;      /* next input will write here */\n  this.val_ = 0;          /* pre-fetched bits */\n  this.pos_ = 0;          /* byte position in stream */\n  this.bit_pos_ = 0;      /* current bit-reading position in val_ */\n  this.bit_end_pos_ = 0;  /* bit-reading end position from LSB of val_ */\n  this.eos_ = 0;          /* input stream is finished */\n  \n  this.readMoreInput();\n  for (var i = 0; i < 4; i++) {\n    this.val_ |= this.buf_[this.pos_] << (8 * i);\n    ++this.pos_;\n  }\n  \n  return this.bit_end_pos_ > 0;\n};\n\n/* Fills up the input ringbuffer by calling the input callback.\n\n   Does nothing if there are at least 32 bytes present after current position.\n\n   Returns 0 if either:\n    - the input callback returned an error, or\n    - there is no more input and the position is past the end of the stream.\n\n   After encountering the end of the input stream, 32 additional zero bytes are\n   copied to the ringbuffer, therefore it is safe to call this function after\n   every 32 bytes of input is read.\n*/\nBrotliBitReader.prototype.readMoreInput = function() {\n  if (this.bit_end_pos_ > 256) {\n    return;\n  } else if (this.eos_) {\n    if (this.bit_pos_ > this.bit_end_pos_)\n      throw new Error('Unexpected end of input ' + this.bit_pos_ + ' ' + this.bit_end_pos_);\n  } else {\n    var dst = this.buf_ptr_;\n    var bytes_read = this.input_.read(this.buf_, dst, BROTLI_READ_SIZE);\n    if (bytes_read < 0) {\n      throw new Error('Unexpected end of input');\n    }\n    \n    if (bytes_read < BROTLI_READ_SIZE) {\n      this.eos_ = 1;\n      /* Store 32 bytes of zero after the stream end. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[dst + bytes_read + p] = 0;\n    }\n    \n    if (dst === 0) {\n      /* Copy the head of the ringbuffer to the slack region. */\n      for (var p = 0; p < 32; p++)\n        this.buf_[(BROTLI_READ_SIZE << 1) + p] = this.buf_[p];\n\n      this.buf_ptr_ = BROTLI_READ_SIZE;\n    } else {\n      this.buf_ptr_ = 0;\n    }\n    \n    this.bit_end_pos_ += bytes_read << 3;\n  }\n};\n\n/* Guarantees that there are at least 24 bits in the buffer. */\nBrotliBitReader.prototype.fillBitWindow = function() {    \n  while (this.bit_pos_ >= 8) {\n    this.val_ >>>= 8;\n    this.val_ |= this.buf_[this.pos_ & BROTLI_IBUF_MASK] << 24;\n    ++this.pos_;\n    this.bit_pos_ = this.bit_pos_ - 8 >>> 0;\n    this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;\n  }\n};\n\n/* Reads the specified number of bits from Read Buffer. */\nBrotliBitReader.prototype.readBits = function(n_bits) {\n  if (32 - this.bit_pos_ < n_bits) {\n    this.fillBitWindow();\n  }\n  \n  var val = ((this.val_ >>> this.bit_pos_) & kBitMask[n_bits]);\n  this.bit_pos_ += n_bits;\n  return val;\n};\n\nmodule.exports = BrotliBitReader;\n","var base64 = require('base64-js');\nvar fs = require('fs');\n\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. 😜\n */\nexports.init = function() {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};\n","module.exports=\"\";\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup table to map the previous two bytes to a context id.\n\n   There are four different context modeling modes defined here:\n     CONTEXT_LSB6: context id is the least significant 6 bits of the last byte,\n     CONTEXT_MSB6: context id is the most significant 6 bits of the last byte,\n     CONTEXT_UTF8: second-order context model tuned for UTF8-encoded text,\n     CONTEXT_SIGNED: second-order context model tuned for signed integers.\n\n   The context id for the UTF8 context model is calculated as follows. If p1\n   and p2 are the previous two bytes, we calcualte the context as\n\n     context = kContextLookup[p1] | kContextLookup[p2 + 256].\n\n   If the previous two bytes are ASCII characters (i.e. < 128), this will be\n   equivalent to\n\n     context = 4 * context1(p1) + context2(p2),\n\n   where context1 is based on the previous byte in the following way:\n\n     0  : non-ASCII control\n     1  : \\t, \\n, \\r\n     2  : space\n     3  : other punctuation\n     4  : \" '\n     5  : %\n     6  : ( < [ {\n     7  : ) > ] }\n     8  : , ; :\n     9  : .\n     10 : =\n     11 : number\n     12 : upper-case vowel\n     13 : upper-case consonant\n     14 : lower-case vowel\n     15 : lower-case consonant\n\n   and context2 is based on the second last byte:\n\n     0 : control, space\n     1 : punctuation\n     2 : upper-case letter, number\n     3 : lower-case letter\n\n   If the last byte is ASCII, and the second last byte is not (in a valid UTF8\n   stream it will be a continuation byte, value between 128 and 191), the\n   context is the same as if the second last byte was an ASCII control or space.\n\n   If the last byte is a UTF8 lead byte (value >= 192), then the next byte will\n   be a continuation byte and the context id is 2 or 3 depending on the LSB of\n   the last byte and to a lesser extent on the second last byte if it is ASCII.\n\n   If the last byte is a UTF8 continuation byte, the second last byte can be:\n     - continuation byte: the next byte is probably ASCII or lead byte (assuming\n       4-byte UTF8 characters are rare) and the context id is 0 or 1.\n     - lead byte (192 - 207): next byte is ASCII or lead byte, context is 0 or 1\n     - lead byte (208 - 255): next byte is continuation byte, context is 2 or 3\n\n   The possible value combinations of the previous two bytes, the range of\n   context ids and the type of the next byte is summarized in the table below:\n\n   |--------\\-----------------------------------------------------------------|\n   |         \\                         Last byte                              |\n   | Second   \\---------------------------------------------------------------|\n   | last byte \\    ASCII            |   cont. byte        |   lead byte      |\n   |            \\   (0-127)          |   (128-191)         |   (192-)         |\n   |=============|===================|=====================|==================|\n   |  ASCII      | next: ASCII/lead  |  not valid          |  next: cont.     |\n   |  (0-127)    | context: 4 - 63   |                     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  cont. byte | next: ASCII/lead  |  next: ASCII/lead   |  next: cont.     |\n   |  (128-191)  | context: 4 - 63   |  context: 0 - 1     |  context: 2 - 3  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: ASCII/lead   |  not valid       |\n   |  (192-207)  |                   |  context: 0 - 1     |                  |\n   |-------------|-------------------|---------------------|------------------|\n   |  lead byte  | not valid         |  next: cont.        |  not valid       |\n   |  (208-)     |                   |  context: 2 - 3     |                  |\n   |-------------|-------------------|---------------------|------------------|\n\n   The context id for the signed context mode is calculated as:\n\n     context = (kContextLookup[512 + p1] << 3) | kContextLookup[512 + p2].\n\n   For any context modeling modes, the context ids can be calculated by |-ing\n   together two lookups from one table using context model dependent offsets:\n\n     context = kContextLookup[offset1 + p1] | kContextLookup[offset2 + p2].\n\n   where offset1 and offset2 are dependent on the context mode.\n*/\n\nvar CONTEXT_LSB6         = 0;\nvar CONTEXT_MSB6         = 1;\nvar CONTEXT_UTF8         = 2;\nvar CONTEXT_SIGNED       = 3;\n\n/* Common context lookup table for all context modes. */\nexports.lookup = new Uint8Array([\n  /* CONTEXT_UTF8, last byte. */\n  /* ASCII range. */\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  4,  4,  0,  0,  4,  0,  0,\n   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n   8, 12, 16, 12, 12, 20, 12, 16, 24, 28, 12, 12, 32, 12, 36, 12,\n  44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 32, 32, 24, 40, 28, 12,\n  12, 48, 52, 52, 52, 48, 52, 52, 52, 48, 52, 52, 52, 52, 52, 48,\n  52, 52, 52, 52, 52, 48, 52, 52, 52, 52, 52, 24, 12, 28, 12, 12,\n  12, 56, 60, 60, 60, 56, 60, 60, 60, 56, 60, 60, 60, 60, 60, 56,\n  60, 60, 60, 60, 60, 56, 60, 60, 60, 60, 60, 24, 12, 28, 12,  0,\n  /* UTF8 continuation byte range. */\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n  /* UTF8 lead byte range. */\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,\n  /* CONTEXT_UTF8 second last byte. */\n  /* ASCII range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1,\n  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0,\n  /* UTF8 continuation byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  /* UTF8 lead byte range. */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  /* CONTEXT_SIGNED, second last byte. */\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7,\n  /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */\n   0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40,\n  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 56,\n  /* CONTEXT_LSB6, last byte. */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n  32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\n  /* CONTEXT_MSB6, last byte. */\n   0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  3,\n   4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,\n   8,  8,  8,  8,  9,  9,  9,  9, 10, 10, 10, 10, 11, 11, 11, 11,\n  12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15,\n  16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19,\n  20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23,\n  24, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27,\n  28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31,\n  32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 35, 35,\n  36, 36, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39,\n  40, 40, 40, 40, 41, 41, 41, 41, 42, 42, 42, 42, 43, 43, 43, 43,\n  44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 47, 47,\n  48, 48, 48, 48, 49, 49, 49, 49, 50, 50, 50, 50, 51, 51, 51, 51,\n  52, 52, 52, 52, 53, 53, 53, 53, 54, 54, 54, 54, 55, 55, 55, 55,\n  56, 56, 56, 56, 57, 57, 57, 57, 58, 58, 58, 58, 59, 59, 59, 59,\n  60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63,\n  /* CONTEXT_{M,L}SB6, second last byte, */\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n]);\n\nexports.lookupOffsets = new Uint16Array([\n  /* CONTEXT_LSB6 */\n  1024, 1536,\n  /* CONTEXT_MSB6 */\n  1280, 1536,\n  /* CONTEXT_UTF8 */\n  0, 256,\n  /* CONTEXT_SIGNED */\n  768, 512,\n]);\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Lookup tables to map prefix codes to value ranges. This is used during\n   decoding of the block lengths, literal insertion lengths and copy lengths.\n*/\n\n/* Represents the range of values belonging to a prefix code: */\n/* [offset, offset + 2^nbits) */\nfunction PrefixCodeRange(offset, nbits) {\n  this.offset = offset;\n  this.nbits = nbits;\n}\n\nexports.kBlockLengthPrefixCode = [\n  new PrefixCodeRange(1, 2), new PrefixCodeRange(5, 2), new PrefixCodeRange(9, 2), new PrefixCodeRange(13, 2),\n  new PrefixCodeRange(17, 3), new PrefixCodeRange(25, 3), new PrefixCodeRange(33, 3), new PrefixCodeRange(41, 3),\n  new PrefixCodeRange(49, 4), new PrefixCodeRange(65, 4), new PrefixCodeRange(81, 4), new PrefixCodeRange(97, 4),\n  new PrefixCodeRange(113, 5), new PrefixCodeRange(145, 5), new PrefixCodeRange(177, 5), new PrefixCodeRange(209, 5),\n  new PrefixCodeRange(241, 6), new PrefixCodeRange(305, 6), new PrefixCodeRange(369, 7), new PrefixCodeRange(497, 8),\n  new PrefixCodeRange(753, 9), new PrefixCodeRange(1265, 10), new PrefixCodeRange(2289, 11), new PrefixCodeRange(4337, 12),\n  new PrefixCodeRange(8433, 13), new PrefixCodeRange(16625, 24)\n];\n\nexports.kInsertLengthPrefixCode = [\n  new PrefixCodeRange(0, 0), new PrefixCodeRange(1, 0), new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0),\n  new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0), new PrefixCodeRange(6, 1), new PrefixCodeRange(8, 1),\n  new PrefixCodeRange(10, 2), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 3), new PrefixCodeRange(26, 3),\n  new PrefixCodeRange(34, 4), new PrefixCodeRange(50, 4), new PrefixCodeRange(66, 5), new PrefixCodeRange(98, 5),\n  new PrefixCodeRange(130, 6), new PrefixCodeRange(194, 7), new PrefixCodeRange(322, 8), new PrefixCodeRange(578, 9),\n  new PrefixCodeRange(1090, 10), new PrefixCodeRange(2114, 12), new PrefixCodeRange(6210, 14), new PrefixCodeRange(22594, 24),\n];\n\nexports.kCopyLengthPrefixCode = [\n  new PrefixCodeRange(2, 0), new PrefixCodeRange(3, 0), new PrefixCodeRange(4, 0), new PrefixCodeRange(5, 0),\n  new PrefixCodeRange(6, 0), new PrefixCodeRange(7, 0), new PrefixCodeRange(8, 0), new PrefixCodeRange(9, 0),\n  new PrefixCodeRange(10, 1), new PrefixCodeRange(12, 1), new PrefixCodeRange(14, 2), new PrefixCodeRange(18, 2),\n  new PrefixCodeRange(22, 3), new PrefixCodeRange(30, 3), new PrefixCodeRange(38, 4), new PrefixCodeRange(54, 4),\n  new PrefixCodeRange(70, 5), new PrefixCodeRange(102, 5), new PrefixCodeRange(134, 6), new PrefixCodeRange(198, 7),\n  new PrefixCodeRange(326, 8), new PrefixCodeRange(582, 9), new PrefixCodeRange(1094, 10), new PrefixCodeRange(2118, 24),\n];\n\nexports.kInsertRangeLut = [\n  0, 0, 8, 8, 0, 16, 8, 16, 16,\n];\n\nexports.kCopyRangeLut = [\n  0, 8, 0, 8, 16, 0, 16, 8, 16,\n];\n","/* Copyright 2013 Google Inc. All Rights Reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   Transformations on dictionary words.\n*/\n\nvar BrotliDictionary = require('./dictionary');\n\nvar kIdentity       = 0;\nvar kOmitLast1      = 1;\nvar kOmitLast2      = 2;\nvar kOmitLast3      = 3;\nvar kOmitLast4      = 4;\nvar kOmitLast5      = 5;\nvar kOmitLast6      = 6;\nvar kOmitLast7      = 7;\nvar kOmitLast8      = 8;\nvar kOmitLast9      = 9;\nvar kUppercaseFirst = 10;\nvar kUppercaseAll   = 11;\nvar kOmitFirst1     = 12;\nvar kOmitFirst2     = 13;\nvar kOmitFirst3     = 14;\nvar kOmitFirst4     = 15;\nvar kOmitFirst5     = 16;\nvar kOmitFirst6     = 17;\nvar kOmitFirst7     = 18;\nvar kOmitFirst8     = 19;\nvar kOmitFirst9     = 20;\n\nfunction Transform(prefix, transform, suffix) {\n  this.prefix = new Uint8Array(prefix.length);\n  this.transform = transform;\n  this.suffix = new Uint8Array(suffix.length);\n  \n  for (var i = 0; i < prefix.length; i++)\n    this.prefix[i] = prefix.charCodeAt(i);\n  \n  for (var i = 0; i < suffix.length; i++)\n    this.suffix[i] = suffix.charCodeAt(i);\n}\n\nvar kTransforms = [\n     new Transform(         \"\", kIdentity,       \"\"           ),\n     new Transform(         \"\", kIdentity,       \" \"          ),\n     new Transform(        \" \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kOmitFirst1,     \"\"           ),\n     new Transform(         \"\", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" the \"      ),\n     new Transform(        \" \", kIdentity,       \"\"           ),\n     new Transform(       \"s \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \" and \"      ),\n     new Transform(         \"\", kOmitFirst2,     \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"\"           ),\n     new Transform(       \", \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \", \"         ),\n     new Transform(        \" \", kUppercaseFirst, \" \"          ),\n     new Transform(         \"\", kIdentity,       \" in \"       ),\n     new Transform(         \"\", kIdentity,       \" to \"       ),\n     new Transform(       \"e \", kIdentity,       \" \"          ),\n     new Transform(         \"\", kIdentity,       \"\\\"\"         ),\n     new Transform(         \"\", kIdentity,       \".\"          ),\n     new Transform(         \"\", kIdentity,       \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"\\n\"         ),\n     new Transform(         \"\", kOmitLast3,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"]\"          ),\n     new Transform(         \"\", kIdentity,       \" for \"      ),\n     new Transform(         \"\", kOmitFirst3,     \"\"           ),\n     new Transform(         \"\", kOmitLast2,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" a \"        ),\n     new Transform(         \"\", kIdentity,       \" that \"     ),\n     new Transform(        \" \", kUppercaseFirst, \"\"           ),\n     new Transform(         \"\", kIdentity,       \". \"         ),\n     new Transform(        \".\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \", \"         ),\n     new Transform(         \"\", kOmitFirst4,     \"\"           ),\n     new Transform(         \"\", kIdentity,       \" with \"     ),\n     new Transform(         \"\", kIdentity,       \"'\"          ),\n     new Transform(         \"\", kIdentity,       \" from \"     ),\n     new Transform(         \"\", kIdentity,       \" by \"       ),\n     new Transform(         \"\", kOmitFirst5,     \"\"           ),\n     new Transform(         \"\", kOmitFirst6,     \"\"           ),\n     new Transform(    \" the \", kIdentity,       \"\"           ),\n     new Transform(         \"\", kOmitLast4,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \". The \"     ),\n     new Transform(         \"\", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \" on \"       ),\n     new Transform(         \"\", kIdentity,       \" as \"       ),\n     new Transform(         \"\", kIdentity,       \" is \"       ),\n     new Transform(         \"\", kOmitLast7,      \"\"           ),\n     new Transform(         \"\", kOmitLast1,      \"ing \"       ),\n     new Transform(         \"\", kIdentity,       \"\\n\\t\"       ),\n     new Transform(         \"\", kIdentity,       \":\"          ),\n     new Transform(        \" \", kIdentity,       \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ed \"        ),\n     new Transform(         \"\", kOmitFirst9,     \"\"           ),\n     new Transform(         \"\", kOmitFirst7,     \"\"           ),\n     new Transform(         \"\", kOmitLast6,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kOmitLast8,      \"\"           ),\n     new Transform(         \"\", kIdentity,       \" at \"       ),\n     new Transform(         \"\", kIdentity,       \"ly \"        ),\n     new Transform(    \" the \", kIdentity,       \" of \"       ),\n     new Transform(         \"\", kOmitLast5,      \"\"           ),\n     new Transform(         \"\", kOmitLast9,      \"\"           ),\n     new Transform(        \" \", kUppercaseFirst, \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\"\"         ),\n     new Transform(        \".\", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"\\\">\"        ),\n     new Transform(         \"\", kIdentity,       \"=\\\"\"        ),\n     new Transform(        \" \", kIdentity,       \".\"          ),\n     new Transform(    \".com/\", kIdentity,       \"\"           ),\n     new Transform(    \" the \", kIdentity,       \" of the \"   ),\n     new Transform(         \"\", kUppercaseFirst, \"'\"          ),\n     new Transform(         \"\", kIdentity,       \". This \"    ),\n     new Transform(         \"\", kIdentity,       \",\"          ),\n     new Transform(        \".\", kIdentity,       \" \"          ),\n     new Transform(         \"\", kUppercaseFirst, \"(\"          ),\n     new Transform(         \"\", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kIdentity,       \" not \"      ),\n     new Transform(        \" \", kIdentity,       \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"er \"        ),\n     new Transform(        \" \", kUppercaseAll,   \" \"          ),\n     new Transform(         \"\", kIdentity,       \"al \"        ),\n     new Transform(        \" \", kUppercaseAll,   \"\"           ),\n     new Transform(         \"\", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\"\"         ),\n     new Transform(         \"\", kUppercaseFirst, \". \"         ),\n     new Transform(        \" \", kIdentity,       \"(\"          ),\n     new Transform(         \"\", kIdentity,       \"ful \"       ),\n     new Transform(        \" \", kUppercaseFirst, \". \"         ),\n     new Transform(         \"\", kIdentity,       \"ive \"       ),\n     new Transform(         \"\", kIdentity,       \"less \"      ),\n     new Transform(         \"\", kUppercaseAll,   \"'\"          ),\n     new Transform(         \"\", kIdentity,       \"est \"       ),\n     new Transform(        \" \", kUppercaseFirst, \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"\\\">\"        ),\n     new Transform(        \" \", kIdentity,       \"='\"         ),\n     new Transform(         \"\", kUppercaseFirst, \",\"          ),\n     new Transform(         \"\", kIdentity,       \"ize \"       ),\n     new Transform(         \"\", kUppercaseAll,   \".\"          ),\n     new Transform( \"\\xc2\\xa0\", kIdentity,       \"\"           ),\n     new Transform(        \" \", kIdentity,       \",\"          ),\n     new Transform(         \"\", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(         \"\", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(         \"\", kIdentity,       \"ous \"       ),\n     new Transform(         \"\", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseFirst, \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \",\"          ),\n     new Transform(        \" \", kUppercaseAll,   \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \", \"         ),\n     new Transform(         \"\", kUppercaseAll,   \",\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"(\"          ),\n     new Transform(         \"\", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseAll,   \".\"          ),\n     new Transform(         \"\", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseAll,   \". \"         ),\n     new Transform(        \" \", kUppercaseFirst, \"=\\\"\"        ),\n     new Transform(        \" \", kUppercaseAll,   \"='\"         ),\n     new Transform(        \" \", kUppercaseFirst, \"='\"         )\n];\n\nexports.kTransforms = kTransforms;\nexports.kNumTransforms = kTransforms.length;\n\nfunction ToUpperCase(p, i) {\n  if (p[i] < 0xc0) {\n    if (p[i] >= 97 && p[i] <= 122) {\n      p[i] ^= 32;\n    }\n    return 1;\n  }\n  \n  /* An overly simplified uppercasing model for utf-8. */\n  if (p[i] < 0xe0) {\n    p[i + 1] ^= 32;\n    return 2;\n  }\n  \n  /* An arbitrary transform for three byte characters. */\n  p[i + 2] ^= 5;\n  return 3;\n}\n\nexports.transformDictionaryWord = function(dst, idx, word, len, transform) {\n  var prefix = kTransforms[transform].prefix;\n  var suffix = kTransforms[transform].suffix;\n  var t = kTransforms[transform].transform;\n  var skip = t < kOmitFirst1 ? 0 : t - (kOmitFirst1 - 1);\n  var i = 0;\n  var start_idx = idx;\n  var uppercase;\n  \n  if (skip > len) {\n    skip = len;\n  }\n  \n  var prefix_pos = 0;\n  while (prefix_pos < prefix.length) {\n    dst[idx++] = prefix[prefix_pos++];\n  }\n  \n  word += skip;\n  len -= skip;\n  \n  if (t <= kOmitLast9) {\n    len -= t;\n  }\n  \n  for (i = 0; i < len; i++) {\n    dst[idx++] = BrotliDictionary.dictionary[word + i];\n  }\n  \n  uppercase = idx - len;\n  \n  if (t === kUppercaseFirst) {\n    ToUpperCase(dst, uppercase);\n  } else if (t === kUppercaseAll) {\n    while (len > 0) {\n      var step = ToUpperCase(dst, uppercase);\n      uppercase += step;\n      len -= step;\n    }\n  }\n  \n  var suffix_pos = 0;\n  while (suffix_pos < suffix.length) {\n    dst[idx++] = suffix[suffix_pos++];\n  }\n  \n  return idx - start_idx;\n}\n"],"sourceRoot":""}